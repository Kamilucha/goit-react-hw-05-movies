{"version":3,"file":"static/js/186.6b22a0f6.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","services/fetchAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport MovieAPI from \"services/fetchAPI\";\n\nconst movieAPI = new MovieAPI()\n\nconst Rewievs = () => {\n\nconst { movieId } = useParams();\nconst [reviews, setReviews] = useState([]);\n    \n \nuseEffect(() => {\n    const getReviewsById = async () => {\n      try {\n        const resp = await movieAPI.ReviewsById(movieId);\n        console.log(resp);\n        if (resp.results.length === 0) {\n          setReviews([]);\n        } else {\n          setReviews(resp.results);\n        }\n      } catch (error) {\n        console.log(\"Error searching movies:\", error);\n      }\n    };\n\n    getReviewsById();\n}, [movieId]);\n            \n\n    return (\n        <ul>\n            {reviews.map((review) => (\n                <li key={review.id}>\n                    <p>Author: {review.author}</p>\n                    <p>{ review.content}</p>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nexport default Rewievs","\nclass MovieAPI  {\n  constructor() {\n    this.apiKEY = '4d36de3fb8d01d2841da81446387c2b5';\n    this.baseURL = 'https://api.themoviedb.org/3';\n  }\n\n  ///метод для трендових фільмів\n  \n  async fetchTrendsMovies() {\n    const URL = `${this.baseURL}/trending/all/day?api_key=${this.apiKEY}`\n\n     try {\n    const response = await fetch(URL);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n  //'https://api.themoviedb.org/3/search/movie?query=cat'\n  ///метод для пошуку фільмів\n\n  async movieByQuery(value) {\n    const URL = `${this.baseURL}/search/movie?api_key=${this.apiKEY}&query=${value}`\n\n     try {\n    const response = await fetch(URL);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n  ///метод для фільму по айді\n  ///'https://api.themoviedb.org/3/movie/movie_id'\n\n  async MovieById(id) {\n    const URL = `${this.baseURL}/movie/${id}?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n    ///метод для акторів по айді\n    async CastById(id) {\n    const URL = `${this.baseURL}/movie/${id}/credits?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n    }\n  \n  \n  \n      ///метод для акторів по айді\n    async ReviewsById(id) {\n    const URL = `${this.baseURL}/movie/${id}/reviews?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n    }\n\n\n\n}\n\nexport default MovieAPI;\n\n  \n    ","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["movieAPI","MovieAPI","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewsById","ReviewsById","resp","console","log","results","length","map","review","author","content","id","this","apiKEY","baseURL","URL","fetch","response","ok","Error","json","data","value","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}
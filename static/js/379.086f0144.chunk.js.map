{"version":3,"file":"static/js/379.086f0144.chunk.js","mappings":"uQA8BA,EA9BkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACjB,GAAKA,EAAL,CAIA,IAAQC,EAA6DD,EAA7DC,aAAcC,EAA+CF,EAA/CE,OAAQC,EAAuCH,EAAvCG,YAAaC,EAA0BJ,EAA1BI,MAAOC,EAAmBL,EAAnBK,KAAMC,EAAaN,EAAbM,SAElDC,EAAiBC,KAAKC,MAAOR,EAAe,GAAM,KAElDS,EAAMP,EAAW,0CACcA,GAC/B,GAEAQ,EAAcT,GAAUA,EAAOU,QAAU,EACzCV,EAAOW,KAAI,SAAAC,GAAK,OAAIA,EAAMT,IAAV,IAAgBU,KAAK,MACrC,YAEN,OACI,4BACI,gBAAKC,IAAKN,EAAKO,IAAKb,KACpB,wBAAKA,GAASC,KACd,wCAAgBE,EAAhB,QACA,sCACA,uBAAID,KACJ,oCACA,uBAAKK,MAtBZ,CAyBJ,ECvBKO,EAAW,IAAIC,EAAAA,EA8CrB,EA5CqB,WACjB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOtB,EAAP,KAAcuB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMjBC,QAAQC,IAAIH,IAGZI,EAAAA,EAAAA,YAAU,WAENC,EAAaT,EAEhB,GAAE,CAACA,IAEJ,IAAMS,EAAY,mCAAG,WAAOT,GAAP,gGAEMF,EAASY,UAAUV,GAFzB,OAEPW,EAFO,OAIbR,EAASQ,GAJI,gDAMbL,QAAQC,IAAI,0BAAZ,MANa,yDAAH,sDAUlB,OAAO,iCACM,SAAC,KAAD,CAAMK,GAAG,UAAT,6BACT,SAAC,EAAD,CAAWhC,MAAOA,KAClB,2BACI,yBACE,SAAC,KAAD,CAAMgC,GAAG,OAAT,qBAEF,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,KAAD,MAGP,C","sources":["components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const MovieInfo = ({ movie }) => {\n    if (!movie) {\n        return \n    }\n    // console.log(movie)\n    const { vote_average, genres, poster_path, title, name, overview } = movie;\n\n    const persentageRate = Math.round((vote_average / 10) * 100);\n\n    const img = poster_path\n    ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n        : \"\";\n    \n    const movieGenres = genres && genres.length >= 1\n        ? genres.map(genre => genre.name).join(', ')\n        : 'No genres'\n\n    return (\n        <div>\n            <img src={img} alt={title} />\n            <h2>{title || name}</h2>\n            <p>User Score: {persentageRate}%</p>\n            <h3>Owerview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{ movieGenres}</p>\n        </div>\n    )\n}\n\nexport default MovieInfo","import MovieAPI from \"services/fetchAPI\";\nimport { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\"\nimport MovieInfo from \"components/MovieInfo/MovieInfo\";\n\nconst movieAPI = new MovieAPI()\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const location = useLocation();\n\n\n   \n    // console.log('ляляля') \n    // console.log({ movieId })\n    console.log(location)\n    \n\n    useEffect(() => {\n            \n        getMovieById(movieId);\n        \n    }, [movieId])\n\n    const getMovieById = async (movieId) =>{\n        try {\n            const resp = await movieAPI.MovieById(movieId);\n    \n            setMovie(resp);\n        } catch (error) {\n            console.log(\"Error searching movies:\", error);\n        }\n    }\n    \n    return <>\n                 <Link to='/movies' >Back to movies</Link>\n        <MovieInfo movie={movie}  />\n        <ul>\n            <li>\n              <Link to='cast'>Cast</Link>\n            </li>\n            <li>\n                <Link to='reviews'>Rewievs</Link>  \n            </li>\n        </ul>\n        <Outlet/>\n    </>\n\n}\n\nexport default MovieDetails\n"],"names":["movie","vote_average","genres","poster_path","title","name","overview","persentageRate","Math","round","img","movieGenres","length","map","genre","join","src","alt","movieAPI","MovieAPI","movieId","useParams","useState","setMovie","location","useLocation","console","log","useEffect","getMovieById","MovieById","resp","to"],"sourceRoot":""}
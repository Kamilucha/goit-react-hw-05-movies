{"version":3,"file":"static/js/81.1278118d.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.jsx","components/MoviesByQuery/MoviesByQuery.jsx","pages/Movies/Movies.jsx","services/fetchAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const SearchBox = ({ value, onChange }) => {\n    return (\n        <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}/>\n    )\n}\n\nSearchBox.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\nexport const MoviesByQuery = ({ movies }) => {\n      const location = useLocation()\n    console.log(location)\n\n     if (!movies || movies.length === 0) {\n    return <p>Start searching for movies</p>;\n  }\n    return (\n        <div>\n            <ul>\n              {movies.map(({id, title}) => (\n                  <li key={id}>\n                      <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n                  </li>\n              ))}\n            </ul>\n        </div>\n    )\n}\n\nMoviesByQuery.propTypes = {\n  movies: PropTypes.array.isRequired,\n}","import { SearchBox } from \"components/SearchBox/SearchBox\"\nimport MovieAPI from \"services/fetchAPI\";\nimport { useSearchParams  } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { MoviesByQuery } from \"components/MoviesByQuery/MoviesByQuery\";\n\nconst movieAPI = new MovieAPI()\n\n const Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get(\"title\") ?? \"\";\n   const [movies, setMovies] = useState([]);\n\n\n    useEffect(() => {\n\n      const searchMovies = async () => {\n        try {\n          if (movieName.trim() !== \"\") {\n            const data = await movieAPI.movieByQuery(movieName);\n            setMovies(data.results);\n          } else {\n            setMovies([]);\n          }\n        } catch (error) {\n          console.log(\"Error searching movies:\", error);\n        }\n      };\n        searchMovies();\n        \n    }, [movieName]);\n\n    \n    const updateQueryString = (value) => {\n\n      const nextParams = value !== \"\" ? { title: value } : {};\n        \n      setSearchParams(nextParams);\n    };\n\n    \n    return (\n        <main>\n            <SearchBox value={movieName} onChange={updateQueryString} />\n        <MoviesByQuery movies={movies}  />\n        </main>\n    )\n }\n\n export default Movies","\nclass MovieAPI  {\n  constructor() {\n    this.apiKEY = '4d36de3fb8d01d2841da81446387c2b5';\n    this.baseURL = 'https://api.themoviedb.org/3';\n  }\n\n  ///метод для трендових фільмів\n  \n  async fetchTrendsMovies() {\n    const URL = `${this.baseURL}/trending/all/day?api_key=${this.apiKEY}`\n\n     try {\n    const response = await fetch(URL);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n  //'https://api.themoviedb.org/3/search/movie?query=cat'\n  ///метод для пошуку фільмів\n\n  async movieByQuery(value) {\n    const URL = `${this.baseURL}/search/movie?api_key=${this.apiKEY}&query=${value}`\n\n     try {\n    const response = await fetch(URL);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n  ///метод для фільму по айді\n  ///'https://api.themoviedb.org/3/movie/movie_id'\n\n  async MovieById(id) {\n    const URL = `${this.baseURL}/movie/${id}?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n    ///метод для акторів по айді\n    async CastById(id) {\n    const URL = `${this.baseURL}/movie/${id}/credits?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n    }\n  \n  \n  \n      ///метод для акторів по айді\n    async ReviewsById(id) {\n    const URL = `${this.baseURL}/movie/${id}/reviews?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n    }\n\n\n\n}\n\nexport default MovieAPI;\n\n  \n    ","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["SearchBox","value","onChange","type","e","target","MoviesByQuery","movies","location","useLocation","console","log","length","map","id","title","to","state","from","movieAPI","MovieAPI","useSearchParams","searchParams","setSearchParams","movieName","get","useState","setMovies","useEffect","searchMovies","trim","movieByQuery","data","results","this","apiKEY","baseURL","URL","fetch","response","ok","Error","json","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}
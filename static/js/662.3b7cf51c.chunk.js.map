{"version":3,"file":"static/js/662.3b7cf51c.chunk.js","mappings":"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","sources":["components/AllMoviesList/AllMoviesList.jsx","pages/Home/Home.jsx","services/fetchAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const AllMoviesList = ({ movies}) => {\n    return (\n         <ul>\n            {movies.map((movie) => (\n                <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`}>{movie.title || movie.name}</Link>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nAllMoviesList.propTypes = {\n    movies: PropTypes.array.isRequired\n}","import { useState, useEffect } from \"react\"\nimport {  useLocation  } from \"react-router-dom\";\n\nimport { AllMoviesList } from \"components/AllMoviesList/AllMoviesList\";\nimport MovieAPI from \"services/fetchAPI\";\n\nconst movieAPI = new MovieAPI()\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n\n    console.log(location)\n\n    useEffect(() => {\n       fetchTrendsMovies();\n    }, [])\n    \n    const fetchTrendsMovies = async () => {\n        try {\n            const data = await movieAPI.fetchTrendsMovies();\n            setMovies(data.results)\n        } catch (error) {\n            console.log(\"Error fetching movies:\", error);\n        }\n    } \n\n    return (\n        <div>\n            <h1>Tranding today</h1>\n            <AllMoviesList movies={movies} state={{from: location}}/>\n        </div>\n    )\n}\n\nexport default Home","\nclass MovieAPI  {\n  constructor() {\n    this.apiKEY = '4d36de3fb8d01d2841da81446387c2b5';\n    this.baseURL = 'https://api.themoviedb.org/3';\n  }\n\n  ///метод для трендових фільмів\n  \n  async fetchTrendsMovies() {\n    const URL = `${this.baseURL}/trending/all/day?api_key=${this.apiKEY}`\n\n     try {\n    const response = await fetch(URL);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n  //'https://api.themoviedb.org/3/search/movie?query=cat'\n  ///метод для пошуку фільмів\n\n  async movieByQuery(value) {\n    const URL = `${this.baseURL}/search/movie?api_key=${this.apiKEY}&query=${value}`\n\n     try {\n    const response = await fetch(URL);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n  ///метод для фільму по айді\n  ///'https://api.themoviedb.org/3/movie/movie_id'\n\n  async MovieById(id) {\n    const URL = `${this.baseURL}/movie/${id}?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n  }\n\n    ///метод для акторів по айді\n    async CastById(id) {\n    const URL = `${this.baseURL}/movie/${id}/credits?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n    }\n  \n  \n  \n      ///метод для акторів по айді\n    async ReviewsById(id) {\n    const URL = `${this.baseURL}/movie/${id}/reviews?api_key=${this.apiKEY}`\n\n      try {\n        const response = await fetch(URL);\n        // console.log(response)\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n        const data = await response.json();\n        // console.log(data)\n        return data;\n  } catch (error) {\n    console.log('Error fetching movies:', error);\n  }\n    }\n\n\n\n}\n\nexport default MovieAPI;\n\n  \n    ","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["AllMoviesList","movies","map","movie","to","id","title","name","movieAPI","MovieAPI","useState","setMovies","location","useLocation","console","log","useEffect","fetchTrendsMovies","data","results","state","from","this","apiKEY","baseURL","URL","fetch","response","ok","Error","json","value","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}